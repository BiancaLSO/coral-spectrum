+document-section('JavaScript Examples')
  p.
    The following examples demonstrate usage of the JavaScript API's for
    #{component.displayName}.

  #constructorExample.
    <script>
    $(document).ready(function() {
      var calendar = new Coral.Calendar().set({
        id: 'myCalendar',
        min: new Date(2014,8,1),
        max: new Date(2014,11,31),
        valueAsDate: new Date(2014,9,23)
      });

      document.getElementById('constructorExample').appendChild(calendar);
    })
    </script>

  p.
    The following JavaScript manually initializes the component on page
    initialization and adds it to the DOM.

  +example-pre-only("constructorExample")

  +document-subsection('Getting the value')
    | The following will display the above component's value in an alert.

  #getValueExample.
    <script>

      function displayValue() {
        var value = document.querySelector('#myCalendar').value;
        alert('The value is ' + value + '.');
      }
    </script>
  +example-pre-only("getValueExample")
  div.
    <button id="getValueButton" class="coral-Button" onclick="displayValue()">Get Value</button>

  +document-subsection('Setting the value', 'The following will set the above component\'s value to December 5th 2014.')
    #setValueExample.
      <script>
        function setValue() {
          var calendar = document.querySelector('#myCalendar');
          calendar.valueAsDate = new Date(2014,11,5);
        }
      </script>
    +example-pre-only("setValueExample")
    div.
      <button id="getValueButton" class="coral-Button" onclick="setValue()">Set Value</button>

  +document-subsection('Responding to user interaction')
    | The following example shows how to detect changes performed by the user.

    #calendarInteractionExample.
      <script>
        $(document).ready(function () {
          var eventLog = $('#calendarLog');
          document.querySelector('#myCalendar').on('change', function(event) {
            var value = event.target.value;
            eventLog.log('Calendar new value: ' + value);
          });
        });
      </script>
    +example-pre-only("calendarInteractionExample")

  +document-subsection('Working with locales')

  #localizationExample.
    <script>
    $(document).ready(function() {
      moment.locale(document.documentElement.lang || window.navigator.language || 'en');
      var calendar = new Coral.Calendar().set({
        id: 'myCalendar',
        min: new Date(2014,8,1),
        max: new Date(2014,11,31),
        valueAsDate: new Date(2014,9,23),
        startDay: moment.localeData().firstDayOfWeek()
      });
    })
    </script>
  p.
    The following example sets up the component to use the appropriate date formatting for the specified page locale (e.g. &lt;html lang="fr-FR"&gt;). Requires <a class='coral-Link' href='http://momentjs.com'>moment-with-locales.js</a>.

  +example-pre-only('localizationExample')

  p.
    Note: moment-with-locales.js provides support to close to 100 locales. If maintaining minimal footprint is critical to your product, it's possible to generate a custom version (moment-with-locales.custom.js) that limits support to a set of languages you can specify.

  +log('calendarLog')
