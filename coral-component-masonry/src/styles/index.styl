// Hide item before it is managed by the masonry
coral-masonry-item {
  visibility: hidden;
}

._coral-Masonry {
  display: block;
  position: relative;
  box-sizing: border-box !important; // required by layout
}

._coral-Masonry-item {
  position: absolute;
  display: block;
  box-sizing: border-box !important; // required by layout
  will-change: transform, opacity;
  left: 0;
  top: 0;
  border: 1px solid transparent;
  outline: none;

  &.is-managed {
    visibility: visible;
  }

  &.is-dragging, &.is-dropping {
    z-index: 1; // TODO other index?
  }
}

._coral-Masonry-item-quickActions {
  box-sizing: border-box;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 4px 4px;
  border-radius: 4px;

  position: absolute;
  left: 16px;
  top: 16px;
  width: 40px;
  height: 40px;
  visibility: hidden;
  opacity: 0;
  pointer-events: none;

  transition: opacity 130ms ease-in-out, visibility 0ms linear 130ms;

  ._coral-Checkbox {
    margin: 0;
  }
}

._coral-Masonry.is-selectable {
  ._coral-Masonry-item {
    cursor: pointer;

    &.is-selected,
    &:focus,
    &:hover {
      ._coral-Masonry-item-quickActions {
        visibility: visible;
        opacity: 1;
      }
    }
  }
}

// TODO define better placeholder style
._coral-Masonry-item--placeholder {
  visibility: hidden !important;
}

// Transitions
._coral-Masonry.is-loaded > ._coral-Masonry-item {
  transition: transform 0.5s;

  &.is-beforeInserting {
    opacity: 0;
  }

  &.is-inserting {
    opacity: 1;
    transition: opacity 0.5s;
  }

  &.is-removing {
    opacity: 0;
    transition: opacity 0.5s;
  }
}

@require 'light';
@require 'lightest';
@require 'dark';
@require 'darkest';
