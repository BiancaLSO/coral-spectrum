+document-section('DragAction attributes', true)
    +document-subsection('Usage')
        | DragAction attributes are activated on <code>DOMContentLoaded</code> event. JS initialization can be used
        | as alternative to handle dynamic HTML elements.
    +document-subsection('coral-dragaction')
        | The <code>coral-dragaction</code> attribute adds draggable functionalities to the corresponding HTML element.
        +markup-example()
            +component-markup({dragElement: true})
    +document-subsection('coral-dragaction-handle')
        | The <code>coral-dragaction-handle</code> attribute allows dragging only by dragging the specified handle.
        +markup-example()
            | <span coral-dragaction coral-dragaction-handle="#handle">
            |   You can only drag me using the <span id="handle"><b>handle</b></span>
            | </span>
    +document-subsection('coral-dragaction-dropzone')
        | The <code>coral-dragaction-dropzone</code> attribute is used to indicate possible dropzones making it possible
        | to build drag-and-drop enabled interfaces in conjunction with <code>DragAction</code> events.
        +markup-example()
            | <span id="dragaction" coral-dragaction coral-dragaction-dropzone="#dropzone">
            |   You can drop me on #dropzone
            | </span>
            | <div id="dropzone" style="height:200px;width:200px;background: #eee;">
            |   I'm #dropzone
            | </div>
    +document-subsection('coral-dragaction-axis')
        | By supplying <code>coral-dragaction-axis</code> and setting it to either <code>horizontal</code> or <code>vertical</code>,
        | it is possible to restrict the drag'n'drop to a single axis.
        +markup-example()
            +component-markup({
                label: 'You can drag me on the horizontal axis only',
                dragElement: true,
                axis: 'horizontal'
            })
    +document-subsection('coral-dragaction-scroll')
        | <code>coral-dragaction-scroll</code> attribute will scroll the container when the draggable is moved beyond the viewport
        +markup-example()
            +component-markup({
                label: 'You can drag me to the document\'s body edges and beyond !',
                dragElement: true,
                scroll: true
            })
    +document-subsection('coral-dragaction-containment')
        | By setting <code>coral-dragaction-containment</code>, the draggable element will be constrained to its container.
        +markup-example()
            | <div style="height:200px;width:200px;background: #eee;overflow:scroll;">
            |   <div coral-dragaction coral-dragaction-containment style="width:50px;border:1px solid #999;">
            |       You can not drag me out
            |   </div>
            | </div>
