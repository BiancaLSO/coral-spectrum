script.
  if (typeof Coral.Configurator === 'function') {
    var configurator = new Coral.Configurator().set({
      before: '<button is="coral-button" id="targetComponent">Target</button>'
    });

    configurator.set({
      component: Coral.Tooltip,
      useInnerElements: true,
      innerElements: [
        {
          tagName: 'coral-tooltip-content',
          properties: {
            'content.innerHTML': 'innerHTML'
          }
        },
      ],
      mainContentZone: 'coral-tooltip-content',
    });

    configurator.set({
      fields: [
        {
          label: 'Content',
          prop: 'content.innerHTML',
          type: 'text',
          value: 'This is a tooltip.'
        },
        {
          label: 'Variant',
          prop: 'variant',
          type: 'select',
          value: 'info',
          options: {
            'Info': 'info',
            'Success': 'success',
            'Error': 'error',
            'Notice': 'notice',
            'Inspect': 'inspect'
          }
        },
        {
          label: 'Placement',
          prop: 'placement',
          type: 'select',
          value: 'right',
          options: {
            'Top': 'top',
            'Bottom': 'bottom',
            'Left': 'left',
            'Right': 'right'
          }
        },
        {
          label: 'Target',
          prop: 'target',
          type: 'text',
          value: '#targetComponent'
        },
        {
          label: 'Open',
          prop: 'open',
          value: true,
          type: 'checkbox'
        }
      ]
    }).insertAfterLastScript();;

    configurator.on('coral-configurator:propchange', function(event) {
      if (event.detail.prop === 'content') {
        var instance = this.instance;
        // Without this, changing content will cause the element to wrap
        Coral.commons.nextFrame(function() {
          // Do it after a frame, otherwise calculations are wrong
          instance._refreshPosition();
        });
      }
    });
  }

