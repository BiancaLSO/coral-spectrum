+document-section('Usage')
  p.
    Let's assume we have an object called <code>component</code> that implements the Coral.Collection. This will enable
    us to add and remove items with ease.

  +document-subsection('add(item, insertBefore)')
    p.
      Adding a new item can be done using the <code>add()</code> method. It also accepts the <i>insertBefore</i>
      parameter to be able to specify where the item is added. If this value is null, then it is added at the end
      of the collection. Adding an item triggers the <code>coral-collection:add</code> event.

    pre.prettyprint.docs-Example-snippet
      = 'var addedItem = component.items.add(item);'

    p.
      The item can also be an Object whose properties match the setter of the items that the collection typically
      manipulates. This will depend highly in the component that is exposing the Coral.Collection.

    pre.prettyprint.docs-Example-snippet
      = 'var addedItem = component.items.add({\n  "label":"Hello"\n});'

  +document-subsection('remove(item)')
    p.
      We can also remove an item by using the <code>remove()</code> method. It only accepts <code>HTMLElement</code>.
      Removing an item triggers an <code>coral-collection:remove</code> event.

    pre.prettyprint.docs-Example-snippet
      = 'var removeditem = component.items.remove(item);'

  +document-subsection('getAll()')
    p.
      To obtain all the items inside a Coral.Collection <code>getAll()</code> should be used. This method should always
      return an <code>Array.&lt;HTMLElement&gt;</code>.

    pre.prettyprint.docs-Example-snippet
      = 'var items = component.items.getAll();'

  +document-subsection('clear()')
    p.
      Removing all elements can be done using <code>clear()</code>. This will trigger a
      <code>coral-collection:remove</code> event for every item that is removed.
    pre.prettyprint.docs-Example-snippet
      = 'var items = component.items.clear();'
