script.
  if (typeof Coral.Configurator === 'function') {
    var configurator = new Coral.Configurator().set({
      component: Coral.ColorInput,
      fields: [
        {
          label: 'Name',
          prop: 'name',
          type: 'text',
          value: 'color'
        },
        {
          label: 'Value (e.g.: "cmyk(0,100,50,0)")',
          prop: 'value',
          type: 'text',
          value: 'rgb(255,0,0)'
        },
        {
          label: 'Variant',
          prop: 'variant',
          type: 'select',
          value: 'default',
          options: {
            'DEFAULT': 'default',
            'SWATCH': 'swatch'
          }
        },
        {
          label: 'Auto generate colors',
          prop: 'autoGenerateColors',
          type: 'select',
          value: 'off',
          options: {
            'OFF': 'off',
            'Shades': 'shades',
            'Tints': 'tints'
          }
        },
        {
          label: 'Show default colors',
          prop: 'showDefaultColors',
          type: 'select',
          value: 'on',
          options: {
            'OFF': 'off',
            'ON': 'on'
          }
        },
        {
          label: 'Show swatches tab',
          prop: 'showSwatches',
          type: 'select',
          value: 'on',
          options: {
            'OFF': 'off',
            'ON': 'on'
          }
        },
        {
          label: 'Show color properties tab',
          prop: 'showProperties',
          type: 'select',
          value: 'on',
          options: {
            'OFF': 'off',
            'ON': 'on'
          }
        },
        {
          label: 'is disabled',
          prop: 'disabled',
          type: 'checkbox',
          value: false
        },
        {
          label: 'is invalid',
          prop: 'invalid',
          type: 'checkbox',
          value: false
        },
        {
          label: 'is read-only',
          prop: 'readOnly',
          type: 'checkbox',
          value: false
        },
        {
          label: 'is required',
          prop: 'required',
          type: 'checkbox',
          value: false
        }
      ],
      componentEvents: [
        'change'
      ],
      items: [
        {
          value: 'rgb(255,0,0)'
        },
        {
          value: 'rgba(0,0,0,1)'
        },
        {
          value: '#ffffff'
        },
        {
          value: 'hsb(120,100,100)'
        },
        {
          value: 'cmyk(100,100,50,0)'
        }
      ]
    }).insertAfterLastScript();
  }
