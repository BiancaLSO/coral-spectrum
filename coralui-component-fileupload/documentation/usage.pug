+document-section('Usage')

  +document-subsection('Special Attributes')
    p.
      Child elements of <code>&lt;coral-fileupload&gt;</code> can be given special attributes to enable functionality.

    ul
      li.
        <code>[coral-fileupload-select]</code> - Click to choose file(s), replacing existing files
      li.
        <code>[coral-fileupload-dropzone]</code> - Drag &amp; drop files to choose file(s), replacing existing files
      li.
        <code>[coral-fileupload-clear]</code> - Click to remove all files from the queue
      li.
        <code>[coral-fileupload-submit]</code> - Click to start uploading
      li.
        <code>[coral-fileupload-abort]</code> - Click to abort all uploads
      li.
        <code>[coral-fileupload-abortfile="filename.txt"]</code> - Click to abort a specific file, leaving it in the queue
      li.
        <code>[coral-fileupload-removefile="filename.txt"]</code> - Click to remove a specific file from the queue
      li.
        <code>[coral-fileupload-uploadfile="filename.txt"]</code> - Click to start uploading a specific file

    p.
      Elements with one of the abort attributes will recieve the following CSS classes based on the state of the FileUpload:

    ul
      li.
        <code>is-disabled</code> - Applied when the FileUpload is disabled
      li.
        <code>is-required</code> - Applied when the FileUpload is required
      li.
        <code>is-invalid</code> - Applied when the FileUpload is invalid
      li.
        <code>is-readOnly</code> - Applied when the FileUpload is readOnly
      li.
        <code>is-dragging</code> - Applied to elements matching <code>[coral-fileupload-dropzone]</code> when a file is being dragged

    p.
      Additionally, these elements with have their <code>disabled</code> property toggled as necessary.

  +document-subsection('Usage: In place of a <form>')
    p.
      The FileUpload component can be used in place of a <code>&lt;form&gt;</code> tag to upload files.

    p.
      Simply add the <code>&lt;coral-fileupload&gt;</code> tag where you would like to accept file uploads and use the
      special <code>[coral-fileupload-*]</code> attributes to add functionality to elements within it.

    p.
      By default, FileUpload will upload files using a <code>POST</code> request.
      You can set the <code>method</code> attribute to to <code>PUT</code> or <code>PATCH</code>,
      depending on your use case.

    p.
      The <code>async</code> attribute can be used to submit the form files asynchronously. In this case, the data is
      submitted via a <code>XMLHttpRequest</code>. By default, asynchronous upload is disabled.

    p.
      To set the upload URL, set the <code>action</code> attribute.

    +markup-example().
      <coral-fileupload method="put" action="/account" class="coral-Form-field">
        <button type="button" coral-fileupload-select is="coral-button" variant="secondary">Select file...</button>
        <div coral-fileupload-dropzone> Drag files here!</div>
      </coral-fileupload>

  +document-subsection('Inside of a <form>')
    p.
      The FileUpload component can be nested inside of a <code>&lt;form&gt;</code> and used as a styled file selection button
      that optionally accepts drag and drop operations.

    p.
      As usual, add the <code>&lt;coral-fileupload&gt;</code> tag and set the <code>[coral-fileupload-*]</code> attributes
      on child elements to add upload functionality to them.

    p.
      When using FileUpload synchronously, if you need to change the HTTP method or action URL of the request, do so on the
      <code>&lt;form&gt;</code> tag itself, not the <code>&lt;coral-fileupload&gt;</code> tag.

    +markup-example().
      <form class="coral-Form coral-Form--aligned" method="put" action="/acccount">
        <section class="coral-Form-fieldset">
          <label class="coral-Form-fieldlabel" for="name">Name</label>
          <input is="coral-textfield" class="coral-Form-field" type="text" id="name" placeholder="Your Name">

          <label class="coral-Form-fieldlabel" for="email">E-mail</label>
          <input is="coral-textfield" class="coral-Form-field" type="email" id="email" placeholder="your@name.com">

          <label class="coral-Form-fieldlabel">Profile Picture</label>
          <coral-fileupload class="coral-Form-field">
            <button type="button" coral-fileupload-select coral-fileupload-dropzone is="coral-button" variant="secondary">Browse...</button>
          </coral-fileupload>

          <label class="coral-Form-fieldlabel">&nbsp;</label>
          <button class="coral-Form-field" type="submit" is="coral-button" variant="primary">Submit</button>
        </section>
      </form>

  +document-subsection('Setting the upload action and method with a button')

    p.
      When using FileUpload asynchronously, the <code>action</code> attribute is used as the upload URL.
      If you would like to change the upload URL based on which button was clicked, you can do so with the
      <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-formaction"><code>[formaction]</code></a>
      and
      <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-formmethod"><code>[formmethod]</code></a>
      attributes. This works across all browsers when using FileUpload asynchronously.

    p.
      Because these attributes are part of HTML 5, it will also affect the action of the <code>&lt;form&gt;</code> when
      used within a <code>&lt;coral-fileupload&gt;</code> element that is a child of a <code>&lt;form&gt;</code>
      element. Note that browser support for <code>[formaction]</code>/<code>[formmethod]</code> is poor in outdated
      browsers, so when FileUpload synchonrously in combination with these attributes, you must polyfill this behavior.

    +markup-example().
      <coral-fileupload action="/files" multiple>
        <button coral-fileupload-select is="coral-button">Browse...</button>
        <button is="coral-button" variant="primary" coral-fileupload-submit formaction="/media">Upload to /media</button>
        <button is="coral-button" variant="primary" coral-fileupload-submit >Upload to /files</button>
      </coral-fileupload>
