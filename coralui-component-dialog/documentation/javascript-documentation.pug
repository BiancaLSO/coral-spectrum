+document-section('JavaScript Examples')

  +document-subsection('JS Class Initialization')
  p Use the <code>Coral.Dialog</code> constructor to instantiate a #{component.displayName}.
  #constructorExample.
    <script>
      var dialog = new Coral.Dialog().set({
        id: 'myDialog',
        header: {
          innerHTML: 'This Dialog is Awesome'
        },
        content: {
          innerHTML: '<coral-checkbox id="agree">I Agree</coral-checkbox>'
        },
        footer: {
          innerHTML: '<button is="coral-button" variant="primary" coral-close>Ok</button>'
        }
      });

      document.body.appendChild(dialog);
    </script>
  +example-pre-only('constructorExample')

  +document-subsection('Show a ' + component.displayName )
  p The following is an example of how to show a #{component.displayName}.
  #showDialogExample.
    <script>
      function showDialog() {
        var dialog = document.querySelector('#myDialog');
        dialog.show();
      }
    </script>
  +example-pre-only("showDialogExample")
  div.docs-Example-markup.u-columnMedium
    <button class="coral-Button" onclick="showDialog()">Show #{component.displayName}</button>

  +document-subsection('Handling user interaction')
  p To prevent a dialog from being hidden (for example, until a form passes validation), call <code>event.preventDefault()</code> in any listener to the <code>coral-overlay:beforeclose</code> event.
  p Open and close the dialog using the "Show a Dialog" example above to see logged events.

  #dialogEventExample.
    <script>
      var dialog = document.querySelector('#myDialog');

      dialog.on('coral-overlay:open', function(event) {
        $('#eventLog').log('Dialog opened.');
      });

      dialog.on('coral-overlay:close', function(event) {
        $('#eventLog').log('Dialog closed.');
      });

      dialog.on('coral-overlay:beforeclose', function(event) {
        if (!document.querySelector('#agree').checked) {
          // Stop the dialog from hiding
          event.preventDefault();

          $('#eventLog').log('Dialog will NOT be closed.');
        }
        else {
          $('#eventLog').log('Dialog will be closed.');
        }
      });
    </script>
  +example-pre-only("dialogEventExample")
  +log('eventLog')

  +document-subsection('Handling user interaction programmatically')
  p Create a <code>Coral.Dialog</code> with two buttons in the footer.
  p The <strong>Cancel</strong> button will have the <code>[coral-close]</code> attribute so it dismisses the dialog.
  p The <strong>Accept</strong> button will have a specific ID that we'll listen for clicks on.

  #buyDialogExample.
    <script>
      var dialog = new Coral.Dialog().set({
        id: 'buyDialog',
        header: {
          innerHTML: 'Dialog Example'
        },
        content: {
          innerHTML: 'You are going to buy stuff, if you accept this message'
        },
        footer: {
          innerHTML: '<button id="cancelButton" is="coral-button" variant="default" coral-close>Cancel</button><button id="acceptButton" is="coral-button" variant="primary">Accept</button>'
        }
      });
      document.body.appendChild(dialog);
    </script>
  +example-pre-only('buyDialogExample')

  p Listen for the <code>coral-overlay:close</code> event to know when the dialog has been dismissed.
  p Listen for the <code>click</code> event on the accept button to know when the user wants to proceed.

  #buyDialogEventExample.
    <script>
      var dialog = document.querySelector('#buyDialog');
      dialog.on('coral-overlay:close', function (event) {
        $('#eventLogBuy').log('Closing dialog.');
      });
      dialog.on('click', '#acceptButton', function() {
        $('#eventLogBuy').log('Accepting the deal');
        dialog.hide();
      });
    </script>
  +example-pre-only("buyDialogEventExample")
  div.docs-Example-markup.u-columnMedium
    <button class="coral-Button" onclick="document.querySelector('#buyDialog').show()">Show Dialog</button>

  +log('eventLogBuy')
