
// Some card-specific mixins first

// Style of strong text
.card-strong-text() {
    font-weight: bold;
    color: @card-list-title-color;
}

// Gradient of selected cards
.card-grid-page-gradient(@color: @card-background-color) {
    @color-transparent: fade(@color, 0%);
    @color-opaque:      fade(@color, 100%);
    background: -moz-linear-gradient(top, @color-transparent 0%, @color-opaque 100%);
    background: -webkit-linear-gradient(top, @color-transparent 0%, @color-opaque 100%);
    background: -o-linear-gradient(top, @color-transparent 0%, @color-opaque 100%);
    background: -ms-linear-gradient(top, @color-transparent 0%, @color-opaque 100%); // IE10+
    background: linear-gradient(to bottom, @color-transparent 0%, @color-opaque 100%); // W3C
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='@{color-transparent}', endColorstr='@{color}', GradientType=0 ); // IE6-9
}

// Grid view: The shadow of cards
.card-grid-shadow() {
    .box-shadow(0 1.5*@px 1.5*@px rgba(0, 0, 0, 0.25));
}

// Grid view: displays the card label as a banner that runs across the preview image
.card-grid-banner(@background: @card-background-color, @border: @card-banner-border-color-white, @shadow-density: 0.5) {
    @card-grid-banner-margin: @card-grid-margin + 2*(@card-banner-offset+@px);
    .calc-width(~"100% - @{card-grid-banner-margin}rem");
    margin-left:  (@card-banner-offset+@px);
    margin-right: (@card-banner-offset+@px);
    
    .image {
        border-bottom: none;
    }
    .label {
        position: absolute;
        z-index: 2;
        top: 50%;
        left:  -@card-banner-offset;
        right: -@card-banner-offset;
        margin: -@px;
        padding: 0 @card-banner-offset;
        border: @px solid @border;
        background-color: @background;
        .box-shadow(0 8*@px 8*@px -5*@px rgba(0, 0, 0, @shadow-density));
        &:before,
        &:after {
            content: " ";
            position: absolute;
            z-index: 1;
            height: 0;
            width: 0;
            border: @card-banner-offset+@px solid transparent;
            border-style: outset solid; // Fixes a FF bug
            pointer-events: none;
        }
        &:before {
            bottom: -2*@px - @card-banner-offset;
            left: -2*@px - @card-banner-offset;
            border-right-color: @background;
        }
        &:after {
            bottom: -2*@px - @card-banner-offset;
            right: -2*@px - @card-banner-offset;
            border-left-color: @background;
        }
    }
    &.selected .label {
        background-color: @card-selection-color;
        border-color: darken(@card-selection-color, 10%);
        &:before {
            border-right-color: @card-selection-color;
        }
        &:after {
            border-left-color: @card-selection-color;
        }
    }
}
.card-grid-banner(black) {
    .card-grid-banner(@card-banner-background-color-black, @card-banner-border-color-black, 0.7);
    &:not(.selected) .label,
    &:not(.selected) .label h4 {
        color: @card-banner-text-color-black;
    }
    &.selected .label,
    &.selected .label h4 {
        @card-selection-banner-black-color: darken(desaturate(@card-selection-color, 20%), 40%);
        @card-selection-banner-black-border: darken(@card-selection-banner-black-color, 10%);

        color: @white;
        background-color: @card-selection-banner-black-color;
        border-color: @card-selection-banner-black-border;
        &:before {
            border-right-color: @card-selection-banner-black-color;
        }
        &:after {
            border-left-color: @card-selection-banner-black-color;
        }
    }
}

// List view: Sets the preview image dimensions on the image element
.card-list-image-dimensions(@width, @height, @display-image: block, @border-color: transparent) {
    .image {
        margin: (@card-list-height - @height - 2*@px)/2 8*@px 0 0;
        border: @px solid @border-color;

        &,
        img {
            width:  @width;
            height: @height;
        }
        img.show-list {
            display: @display-image;
        }
    }
    .select[class] { // The [class] attribute helps to overrule the initial style
        width: ((45+1+10)*@px + @width);
    }
    // The sort triangle in the list header that is displayed above the image column
    .sort {
        margin: 0 8*@px 0 0;
        width: @width;
    }
}

// List view: Adds a little stack to the preview image to illustrate items that have sub-items (used only for WCM pages so far)
.card-list-image-stack(@width, @height, @background: @card-list-stack-background, @border-color: @card-list-stack-border) {
    .card-list-image-dimensions(@width, @height, none, @border-color);

    .image {
        background: @background;
    }
    // When a stack class is placed on the article element, the box-stack should display a stack as well
    &.stack .image {
        &:before,
        &:after {
            content: " ";
            position: absolute;
            height: @px;
            border: @px solid @border-color;
        }
        &:before {
            bottom: -3*@px;
            left: @px;
            width: @width - 4*@px;
        }
        &:after {
            bottom: -5*@px;
            left: 3*@px;
            width: @width - 8*@px;
        }
    }
}

// List view: Draws a box for additional info showed next to the title
.card-list-box() {
    .card-strong-text;
    padding: 0 5*@px;
    border: 1px solid @card-list-gray-border;
    background: @card-list-gray-background;
}

// List view: Draws a yellow box
.card-list-box(yellow) {
    .card-list-box;
    background: @card-list-yellow-background;
    border-color: @card-list-yellow-border;
}

// List view: Displays the date on line line and the user on another line (used for displaying last-modified or last-published info)
.card-list-date-user() {
    margin-top: 7*@px;
    .date {
        .card-strong-text;
    }
    .date,
    .user {
        display: block;
    }
}

/**
  Element: Card View
  Displays assets in result set as a card
*/
[class^="card-"],
[class*=" card-"] {
    position: relative;
    display: inline-block;
    font-size: 12*@px;
    line-height: 18*@px;

    // The card link contains everything
    > a {
        position: relative;
        text-decoration: none;
        color: @card-text-color;

    }

    // The card image
    .image {
        display: block;
        position: relative;
    }
    img,
    canvas {
        display: block;
    }

    // The card text
    .label,
    .main {
        position: relative;
    }
    h4,
    p {
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden;
        margin: 0;
    }
    h4 {
        font-size: inherit;
        .card-strong-text;
    }

    // The card icons
    a i {
        .icon-xsmall;
    }
    i,
    i:before,
    i:hover:before,
    a:hover i:before {
        // Let's overwrite the icons settings and use our own color and transparency settings
        color: inherit;
        opacity: inherit;
    }

    // The top-level <i> elements are the selection and move hanldes
    > i {
        display: none;
    }
}
// Grid view style
.grid [class^="card-"],
.grid [class*=" card-"] {
    .calc-width(~"100% - @{card-grid-margin}rem");
    margin: 0 0 @card-grid-margin 0;
    background: @card-background-color;

    > a {
        .card-grid-shadow;
        display: block;
        z-index: 1;
    }

    .image {
        border-bottom: @px solid @card-image-separator;
    }
    img,
    canvas {
        width: 100%;
        opacity: 0.999; // IE fix
    }
    canvas ~ img {
        display: none;
    }

    .label {
        display: inline-block; // Makes it contain all floating elements
        width: 100%;
    }
    h4 {
        margin: 10*@px;
    }
    p {
        margin: -10*@px 10*@px 10*@px;
    }
    p:empty {
        display: none;
    }
    .info {
        padding-top: 10*@px;
    }
}
// List view style
.list [class^="card-"],
.list [class*=" card-"] {
    display: block;
    border-bottom: 1*@px solid @card-list-separator-color;

    // The selection box
    .select {
        display: block;
        height: 100%;
        position: absolute;
        z-index: 2;
        top: 0;
        width: 45*@px;
        left: 0;

        &:before,
        &:after {
            content: " ";
            position: absolute;
            top: 17*@px;
            left: 15*@px;
            width: 15*@px;
            height: 15*@px;
        }
        &:before {
            background: @card-list-checkbox-background;
            .box-shadow(inset 0 @px 2*@px rgba(0, 0, 0, 0.33));
        }

        // The link element that follows the select item should add some spacing on the left
        & ~ a {
            padding-left: 45*@px;
        }
    }

    // The handle to move the element
    .move {
        .icon-navigation;
        .icon-medium;
        display: block;
        height: 100%;
        position: absolute;
        z-index: 2;
        top: 0;
        width: 45*@px;
        right: 0;
        opacity: 0.3;

        &:before {
            display: block;
            margin: 16*@px auto;
        }

        // The link element that follows the move item should add some spacing on the right
        & ~ a {
            padding-right: 45*@px;
        }
    }

    .sort {
        display: block;
        height: 100%;
    }

    a {
        display: block;
        height: @card-list-height;
        padding: 0 10*@px;

        // hide icons of the card content in list view
        i {
            display: none;
        }
        .image i {
            .icon-large;
            display: block;
        }
    }

    a,
    .label {
        overflow: hidden; // Makes floating elements that break on a new line not affect the next row
        height: @card-list-height;
    }

    h4,
    .main,
    img,
    .image {
        float: left;
    }
    .image img { // Hide the preview images in list view, unless a .card-list-image-dimensions has been set
        display: none;
    }
    h4,
    p {
        margin-top: 16*@px;
    }

    .main {
        > h4 {
            margin-right: 10*@px;
            .card-strong-text;
        }
        > p {
            float: left;
            margin-right: 5*@px;
            border: 1px solid transparent;
        }
    }
}
// Look of the card when selected in grid view
.grid [class^="card-"].selected,
.grid [class*=" card-"].selected {
    a {
        background: @card-selection-color;
    }
}
// Look of the card when selected in list view
.list [class^="card-"].selected,
.list [class*=" card-"].selected {
    border-bottom-color: #eee;
    a {
        background: fade(@card-selection-color, 25%);
    }
    > i.select {
        &:before {
            .box-shadow(inset 0 @px 2*@px rgba(0, 0, 0, 0.5));
            background: white;
        }
        &:after {
            background-image: url('@{component-images-folder}/checkbox/check.png');
            .background-size(100%);
        }
    }
}

/**
    Class: .stack
    Displays a card stack below the card (can be used in conjunction with any other card-* type to make it a stack).
    Apply this class to any card element (on the <article> element).
    In list view, to represent the stack a box-stack should be placed on the desired element that shows that stack.
*/
.grid .stack {
    margin-bottom: @card-grid-margin+(2*@card-stack-offset);

    &:before,
    &:after {
        content: " ";
        position: absolute;
        height: @card-stack-offset;
        pointer-events: none;
        background: inherit;
        .card-grid-shadow;
    }

    &:before {
        bottom: -2*@card-stack-offset;
        left:    2*@card-stack-offset;
        right:   2*@card-stack-offset;
    }

    &:after {
        bottom: -@card-stack-offset;
        left:    @card-stack-offset;
        right:   @card-stack-offset;
    }
}

/**
    Class: .card-collection
    Displays collection card with a banner.
*/
// Grid view style
.grid .card-collection {
    .card-grid-banner();
    .info p {
        float: left;
    }
}
// List view style
.list .card-collection {
    p {
        display: none;
    }
}

/**
    Class: .card-project
    Displays a project (which groups WCM pages, DAM assets and other concepts together).
*/
// Grid view style
.grid .card-project {
    .card-grid-banner(black);

    .image {
        background: @card-banner-border-color-black;
        img,
        canvas {
            opacity: 0.5;
        }
    }
}
// List view style
.list .card-project {
    p {
        display: none;
    }
}

/**
    Class: .card-page
    Displays a WCM page card.
*/
// Grid view style
.grid .card-page {
    .info-approved,
    .info-locked,
    .user {
        display: none;
    }
    .published,
    .modified {
        float: left;
    }
    .links {
        float: right;
    }
    .image {
        &:after {
            content: " ";
            position: absolute;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            .card-grid-page-gradient();
        }
    }
    &.selected {
        .image:after {
            .card-grid-page-gradient(@card-selection-color);
        }
    }
}
// List view style
.list .card-page {
    .card-list-image-stack(28*@px, 28*@px);

    .main {
        width: 65%;
        > p {
            font-size: 10*@px;
            font-weight: bold;
            text-transform: uppercase;
        }
        .info-locked {
            .card-list-box();
        }
        .info-approved {
            .card-list-box(yellow);
        }
    }
    .published,
    .modified {
        float: left;
        width: 15%;
        .card-list-date-user();
    }
    .links {
        float: left;
        width: 5%;
    }
}
// Hidden, redirecting and deactivated pages
.card-page.page-hidden,
.card-page.page-redirect,
.card-page.page-deactivated {
    .list & a > *,
    .grid & img,
    .grid & canvas {
        opacity: 0.5;
    }
    .grid & h4 {
        color: inherit;
    }
}

/**

    Class: .card-asset
    Displays a DAM asset card.
*/
// Grid view style
.grid .card-asset {
    // Small images should not be scaled up to 100% of the card width
    .low-resolution {
        display: block;
        background: @card-asset-image-background;

        > img,
        > canvas {
            margin: 0 auto;
            padding: 1em 0;
            width: auto;
        }
    }

    .user,
    .type {
        display: none;
    }
    .resolution,
    .size,
    .modified,
    .links,
    .comments {
        float: left;
    }
    .info {
        clear: left;
        float: right;
    }
    .modified {
        position: absolute;
        left: 0;
    }
}
// List view style
.list .card-asset {
    .card-list-image-dimensions(38*@px, 30*@px);

    h4, // The <h4> element is a <div class="main"> in the list header
    .main {
        width: 50%;
        font-weight: normal;
    }
    .type,
    .resolution,
    .size,
    .modified {
        float: left;
        width: 10%;
    }
    .links,
    .comments {
        float: left;
        width: 5%;
    }
    .modified {
        .card-list-date-user();
    }
}

/**
    Class: .card-directory
    Displays a DAM directory card.
*/
// Grid view style
.grid .card-directory {
    margin-top: 21*@px;

    // This element will display the folder tab above the card
    &:before {
        content: " ";
        position: absolute;
        top: -21*@px;
        left: 5*@px;
        right: 5*@px;
        height: 13*@px;
        border-bottom: 7*@px solid #ccc; // This color doesn't make sense to be configurable, it has to be the same color as the directory SVG.
        background: url('@{component-images-folder}/card/directory.svg') no-repeat;
    }
}
.grid .card-directory.selected {
    &:before {
        border-bottom-color: #478fc5; // This color doesn't make sense to be configurable, it has to be the same color as the directory SVG.
        background-position: 0 -15px;
    }
}
// List view style
.list .card-directory {
    .card-list-image-dimensions(38*@px, 30*@px, none);

    .main {
        width: 100%;
    }
    .icon-folder {
        margin-top: -4*@px;
        &:before {
            font-size: 38*@px;
            opacity: 1;
        }
    }
}

/**
    Class: .card-board
    Displays a WCM board card.
*/
.card-board {
    color: white;
    background-color: white;
    padding: 4*@px 0 0 4*@px;

    .cardheader {
        background-color: @card-board-header-background;
        margin: 0 4*@px 4*@px 0;
        h4 {
            margin: 0 10*@px 6*@px 10*@px;
            padding: 6*@px 0 4*@px 0;
            border-bottom: 1px solid @card-board-header-border;
            color: white;
            font-size: 13*@px;
        }
        p {
            color: white;
            margin: 0 4*@px 0 10*@px;
            padding: 2*@px 0 2*@px 0;
        }
        i:before {
            color: white !important; // bypass the hover color of the sourrounding "A"
        }
    }

    .cardcontent {
        .cardpreview {
            background-size: cover;
            background-color: @card-board-preview-background;
            margin: 0 4*@px 4*@px 0;
            .calc-width(~"50% - 4px", 48%);
            float:left;

            &.wide {
                .calc-width(~"100% - 4px", 98%);
            }
            img {
                max-width: 100%;
            }
        }
    }
}
