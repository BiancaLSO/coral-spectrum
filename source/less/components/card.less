
// Style of strong text
.card-strong-text() {
    font-weight: bold;
    color: @card-list-title-color;
}

// Card view: The shadow of cards
.card-shadow() {
    .box-shadow(0 1.5*@px 1.5*@px rgba(0, 0, 0, 0.25));
}

// List view: draws a box for additional info showed next to the title
.card-list-box() {
    .card-strong-text;
    padding: 0 5*@px;
    border: 1px solid @card-list-gray-border;
    background: @card-list-gray-background;
}

// List view: draws a yellow box
.card-list-box(yellow) {
    .card-list-box;
    background: @card-list-yellow-background;
    border-color: @card-list-yellow-border;
}

// List view: The preview image
.card-list-preview-element(@width, @height, @border-color: transparent) {
    position: relative;
    z-index: 2;
    float: left;
    margin: (@card-list-height - @height - 2*@px)/2 8*@px 0 0;
    width:  @width;
    height: @height;
    border: @px solid @border-color;
}

// List view: Displays the date on line line and the user on another line (used for displaying last-modified or last-published info)
.card-list-date-user() {
    margin-top: 7*@px;
    .date {
        .card-strong-text;
    }
    .date,
    .user {
        display: block;
    }
}

// List view: prepends the title with a little stack to illustrate items that have sub-items (used only for WCM pages so far)
.card-list-box-stack(@size: 28*@px) {
    .box-stack {
        .card-list-preview-element(@size, @size, @card-list-stack-border);
        background: @card-list-stack-background-main;
    }
    // When a stack class is placed on the article element, the box-stack should display a stack as well
    &.stack .box-stack {
        &:before,
        &:after {
            content: " ";
            position: absolute;
            z-index: 1;
            height: @px;
            border: @px solid @card-list-stack-border;
        }
        &:before {
            bottom: -3*@px;
            left: @px;
            width: @size - 4*@px;
        }
        &:after {
            bottom: -5*@px;
            left: 3*@px;
            width: @size - 8*@px;
        }
    }
}

/**
  Element: Card View
  Displays assets in result set as a card
*/
[class^="card-"],
[class*=" card-"] {
    position: relative;
    display: inline-block;
    font-size: 12*@px;
    line-height: 18*@px;

    > a {
        position: relative;
        text-decoration: none;
        color: @card-text-color;
    }

    .label,
    .main {
        position: relative;
    }

    h4,
    p {
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden;
        margin: 0;
    }
    h4 {
        font-size: inherit;
        .card-strong-text;
    }

    a i {
        .icon-xsmall;
    }
    a i:before,
    a:hover i:before {
        color: @card-text-color;
    }
    > i {
        display: none;
    }
}
// Grid view specific styling
.grid [class^="card-"],
.grid [class*=" card-"] {
    .calc-width(~"100% - @{card-grid-margin}", 95%);
    margin: 0 0 @card-grid-margin 0;
    background: @card-background-color;

    > a {
        z-index: 1;
        float: left;
        width: 100%;
        .card-shadow;
    }

    .label {
        display: inline-block;
        width: 100%;
    }

    img {
        width: 100%;
    }
    .main > img {
        display: none;
    }

    h4 {
        margin: 10*@px;
    }
    p {
        margin: 0 10*@px 10*@px;
    }
}
// List view specific styling
.list [class^="card-"],
.list [class*=" card-"] {
    display: block;
    border-bottom: 1*@px solid @card-list-separator-color;

    // The selection box and the handle to move the element
    > i {
        display: block;
        position: absolute;
        z-index: 1;
        top: 0;
        width: 45*@px;
        height: 100%;

        // The selection box
        &.select {
            left: 0;

            &:before,
            &:after {
                content: " ";
                position: absolute;
                top: 50%;
                left: 50%;
                width: 15*@px;
                height: 15*@px;
                margin: -7.5*@px;
                .background-size(100%);
            }
            &:before {
                background: @card-list-checkbox-background;
                .box-shadow(inset 0 @px 2*@px rgba(0, 0, 0, 0.33));
            }

            // The link element that follows the select item should add some spacing on the left
            & ~ a {
                padding-left: 45*@px;
            }
        }

        // The handle to move the element
        &.move {
            .icon-medium;
            opacity: 0.3;
            right: 0;

            &:before {
                display: block;
                margin: 16*@px auto;
            }

            // The link element that follows the move item should add some spacing on the right
            & ~ a {
                padding-right: 45*@px;
            }
        }
    }

    a {
        overflow: hidden; // Makes floating elements that break on a new line not affect the next row
        display: block;
        height: @card-list-height;
        padding: 0 45*@px;

        // list view columns can be made of div, h4, or p elements
        > div:not(.label),
        > h4,
        > p,
        > .label > div,
        > .label > h4,
        > .label > p {
            float: left;
        }

        > img,
        > span > img,
        i {
            display: none;
        }
    }

    h4,
    p {
        margin-top: 16*@px;
    }

    .main {
        > img {
            .card-list-preview-element(38*@px, 30*@px);
        }
        > h4 {
            float: left;
            margin-right: 10*@px;
            .card-strong-text;
        }
        > p {
            float: left;
            margin-right: 5*@px;
            border: 1px solid transparent;
        }
    }
}
// Look of the card when selected in grid view
.grid [class^="card-"].selected,
.grid [class*=" card-"].selected {}
// Look of the card when selected in list view
.list [class^="card-"].selected,
.list [class*=" card-"].selected {
    > i.select {
        &:before {
            .box-shadow(inset 0 @px 2*@px rgba(0, 0, 0, 0.5));
        }
        &:after {
            background-image: url('@{component-images-folder}/checkbox/check.png');
        }
    }
    > a {
        background: @card-list-selection-color;
    }
}

/**
    Class: .stack
    Displays a card stack below the card (can be used in conjunction with any other card-* type to make it a stack).
    Apply this class to any card element (on the <article> element).
    In list view, to represent the stack a box-stack should be placed on the desired element that shows that stack.
*/
.grid .stack {
    margin-bottom: @card-grid-margin+(2*@card-stack-offset);

    &:before,
    &:after {
        content: " ";
        position: absolute;
        height: @card-stack-offset;
        pointer-events: none;
        background: inherit;
        .card-shadow;
    }

    &:before {
        bottom: -2*@card-stack-offset;
        left:    2*@card-stack-offset;
        right:   2*@card-stack-offset;
    }

    &:after {
        bottom: -@card-stack-offset;
        left:    @card-stack-offset;
        right:   @card-stack-offset;
    }
}

/**
    Class: .banner
    Displays a card a banner.
    Apply this class to any card element (on the <article> element).
    The card-project and card-collection elements are always displayed as banners.
*/
.grid .banner,
.grid .card-project,
.grid .card-collection {
    .label {
        position: absolute;
        top: 50%;
        left:  -@card-banner-offset;
        right: -@card-banner-offset;
        margin: -@px;
        padding: 0 @card-banner-offset;
        border: @px solid @card-banner-border-color-white;
        background-color: @card-background-color;
        .box-shadow(0 8*@px 8*@px -5*@px rgba(0, 0, 0, 0.3));

        &:before,
        &:after {
            content: " ";
            position: absolute;
            height: 0;
            width: 0;
            bottom: -@px - @card-banner-offset;
            border: @card-banner-offset solid transparent;
            pointer-events: none;
        }
        &:before {
            left: -@px - @card-banner-offset;
            border-right-color: @card-background-color;
        }
        &:after {
            right: -@px - @card-banner-offset;
            border-left-color: @card-background-color;
        }
    }
}
.banner-gray() {
    .label {
        border-color: @card-banner-border-color-gray;
        background-color: @card-banner-background-color-gray;
        color: @card-banner-text-color-gray;
        h4 {
            color: @card-banner-title-color-gray;
        }
        i:before {
            color: @card-banner-text-color-gray;
        }
        &:before {
            border-right-color: @card-banner-background-color-gray;
        }
        &:after {
            border-left-color: @card-banner-background-color-gray;
        }
    }
}
.banner-black() {
    .label {
        border-color: @card-banner-border-color-black;
        background-color: @card-banner-background-color-black;
        color: @card-banner-text-color-black;
        h4 {
            color: @card-banner-title-color-black;
        }
        i:before {
            color: @card-banner-text-color-black;
        }
        &:before {
            border-right-color: @card-banner-background-color-black;
        }
        &:after {
            border-left-color: @card-banner-background-color-black;
        }
    }
}

/**
    Class: .card-collection
    Displays collection card with a banner.
*/
// Grid view specific styling
.grid .card-collection {
    p {
        float: left;
        margin-top: -10*@px;
    }
}
// List view specific styling
.list .card-collection {
    p {
        //display: none;
    }
}
// Welcome screen specific design
.grid .card-collection.welcome {
    .banner-gray();
}

/* Temporary - to be removed */
.grid .selected {
    background-color: #ff0000;
}

/**
    Class: .card-project
    Displays a project (which groups WCM pages, DAM assets and other concepts together).
*/
.grid .card-project {
    .banner-black();

    p {
        margin-top: -10*@px;
    }
}
.list .card-project {
    p {
        display: none;
    }
}

/**
    Class: .card-page
    Displays a WCM page card.
*/
.grid .card-page {
    // Grid view specific styling
    .info-approved,
    .info-locked,
    .user {
        display: none;
    }
    .main > p {
        margin-top: -10*@px;
    }
    .published,
    .modified {
        float: left;
    }
    .links {
        float: right;
    }
}
// List view specific styling
.list .card-page {
    .card-list-box-stack;

    img {
        display: none;
    }
    .main {
        width: 65%;
        > p {
            font-size: 10*@px;
            font-weight: bold;
            text-transform: uppercase;
        }
        .info-locked {
            .card-list-box();
        }
        .info-approved {
            .card-list-box(yellow);
        }
    }
    .published,
    .modified {
        width: 15%;
        .card-list-date-user();
    }
    .links {
        width: 5%;
    }
}
// Hidden, redirecting and deactivated pages
.card-page.page-hidden,
.card-page.page-redirect,
.card-page.page-deactivated {
    .list & a,
    .grid & img {
        opacity: 0.5;
    }
}

/**

    Class: .card-asset
    Displays a DAM asset card.
*/
// Grid view specific styling
.grid .card-asset {
    .low-resolution {
        display: block;
        background: @card-asset-image-background;

        > img {
            margin: 0 auto;
            display: block;
            padding: 1em 0;
            width: auto;
        }
    }

    h4 {
        font-weight: normal;
    }
    .resolution,
    .size {
        margin-top: -10*@px;
    }
    .user,
    .type {
        display: none;
    }
    .resolution,
    .size,
    .links,
    .comments {
        float: left;
    }
    .modified {
        clear: left;
        float: right;
    }
}
// List view specific styling
.list .card-asset {
    .main {
        width: 50%;
    }
    .type,
    .resolution,
    .size,
    .modified {
        width: 10%;
    }
    .links,
    .comments {
        width: 5%;
    }
    .modified {
        .card-list-date-user();
    }
}

/**
    Class: .card-directory
    Displays a DAM directory card.
*/
// Grid view
.grid .card-directory {
    margin-top: 21*@px;

    // This element will display the folder tab above the card
    &:before {
        content: " ";
        position: absolute;
        top: -21*@px;
        left: 5*@px;
        right: 5*@px;
        height: 13*@px;
        border-bottom: 7*@px solid #CCC;
        background: url('@{component-images-folder}/card/directory.svg') no-repeat;
    }
}
// List view
.list .card-directory {
    .main {
        width: 100%;
    }
}

/**
    Class: .card-board
    Displays a WCM board card.
*/
.card-board {
    color: white;
    background-color: white;
    padding: 4*@px 0 0 4*@px;

    .cardheader {
        background-color: @card-board-header-background;
        margin: 0 4*@px 4*@px 0;
        h4 {
            margin: 0 10*@px 6*@px 10*@px;
            padding: 6*@px 0 4*@px 0;
            border-bottom: 1px solid @card-board-header-border;
            color: white;
            font-size: 13*@px;
        }
        p {
            color: white;
            margin: 0 4*@px 0 10*@px;
            padding: 2*@px 0 2*@px 0;
        }
        i:before {
            color: white !important; // bypass the hover color of the sourrounding "A"
        }
    }

    .cardcontent {
        .cardpreview {
            background-size: cover;
            background-color: @card-board-preview-background;
            margin: 0 4*@px 4*@px 0;
            .calc-width(~"50% - 4px", 48%);
            float:left;

            &.wide {
                .calc-width(~"100% - 4px", 98%);
            }
            img {
                max-width: 100%;
            }
        }
    }
}
