@icon-xsmall-size: 12*@px;
@icon-small-size: 18*@px;
@icon-medium-size: 24*@px;
@icon-large-size: 2rem;

@icon-blue-color:  rgb(65, 145, 210);
@icon-divider-color: rgb(206, 206, 206);

@icon-label-padding-multiplier: 0.25;
@icon-label-line-height-multiplier: 1.15;

// Setup the font face
@font-face {
  font-family: 'AdobeIcons';
  src: url(~"@{font-folder}/AdobeIcons.eot");
  src: url(~"@{font-folder}/AdobeIcons.svg#AdobeIcons") format("svg"),
    url(~"@{font-folder}/AdobeIcons.woff") format("woff"),
    url(~"@{font-folder}/AdobeIcons.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

// Apply the correct font
[class^="icon-"]:before,
[class*=" icon-"]:before {
  font-family: AdobeIcons;
  font-weight: normal;
  font-style: normal;
  display: inline-block;
  text-decoration: none; // Don't let icons underline
  text-rendering: optimizeLegibility;
}

// Various mixins
.icon-size(@size) {
  line-height: @size;
  font-size: @size;
  min-height: @size;

  &:before {
    min-width: @size;
    min-height: @size;
    .background-size(@size);
  }
}

.icon-xsmall() {
  .icon-size(@icon-xsmall-size);
}
.icon-small() {
  .icon-size(@icon-small-size);
}
.icon-medium() {
  .icon-size(@icon-medium-size);
}
.icon-large() {
  .icon-size(@icon-large-size);
}

.hide-inner-text() {
  // Does not work with :before approach
  //text-indent: 100%;
  //white-space: nowrap;
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  border: 0;
  padding: 0;
}

[class^="icon-"].xsmall,
[class*=" icon-"].xsmall {
  .icon-xsmall;
}

[class^="icon-"].small,
[class*=" icon-"].small {
  .icon-small;
}

[class^="icon-"].medium,
[class*=" icon-"].medium {
  .icon-medium;
}

[class^="icon-"].large,
[class*=" icon-"].large {
  .icon-large;
}

[class^="icon-"],
[class*=" icon-"] {
  &:before {
    font-family: AdobeIcons;
    font-weight: normal;
    font-style: normal;
    display: inline-block;
    text-decoration: inherit;
    color: @icon-color;

    text-decoration: none;

    background-position: center center;
    background-repeat: no-repeat;
    content: " ";

    vertical-align: middle;
    text-align: center;
  }

  &.xsmall {
    .icon-xsmall;
  }

  &.small {
    .icon-small;
  }

  &.medium {
    .icon-medium;
  }

  &.large {
    .icon-large;
  }

  &:not(.withLabel) span {
    .hide-inner-text();
  }

  &.withLabel >span {
    padding-left: 5*@px;
    color: @icon-color;
  }
}

a:hover [class^="icon-"],
a:hover [class*=" icon-"],
a[class^="icon-"]:hover,
a[class*=" icon-"]:hover {
  &:before {
    color: @icon-hover-color;
  }
}

button,
a.button,
span.button {
  &[class^="icon-"],
  &[class*=" icon-"] {
    margin: 0;
    padding: 0;

    font-size: inherit;
  
    min-width: 0;

    &.disabled,
    &[disabled],
    &.disabled:before,
    &[disabled]:before, {
      background-color: transparent;
      opacity: 0.4;
    }

    .disabled:hover,
    &[disabled]:hover {
      background-color: transparent;
      &:before {
        color: @icon-color;
      }
    }
  
    &,
    &:hover,
    &:active {
      border: none;

      box-shadow: none;

      background-color: transparent;
      background-image: none;
    
      text-shadow: none;
      font-weight: normal;
    
      filter: none;
    }

    &:hover {
      &:before {
        color: @icon-hover-color;
      }
    }
  }
}
