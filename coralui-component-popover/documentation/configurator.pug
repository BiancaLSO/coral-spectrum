script.
  if (typeof Coral.Configurator === 'function') {
    var configurator = new Coral.Configurator().set({
      before: '<button is="coral-button" id="demoButton">Target</button>',
      component: Coral.Popover,
      useInnerElements: true,
      innerElements: [
        {
          tagName: 'coral-popover-content',
          properties: {
            'content.innerHTML': 'innerHTML'
          }
        },
        {
          tagName: 'coral-popover-header',
          properties: {
            'header.innerHTML': 'innerHTML'
          }
        }
      ],
      fields: [
        {
          label: 'Placement',
          prop: 'placement',
          type: 'select',
          value: 'right',
          options: {
            'Top': 'top',
            'Bottom': 'bottom',
            'Left': 'left',
            'Right': 'right'
          }
        },
        {
          label: 'Header',
          prop: 'header.innerHTML',
          type: 'text',
          value: 'Popover Header'
        },
        {
          label: 'Content',
          prop: 'content.innerHTML',
          type: 'text',
          value: '<p class="u-coral-margin">This is a popover.</p>'
        },
        {
          label: 'Variant',
          prop: 'variant',
          type: 'select',
          value: 'default',
          options: {
            DEFAULT: 'default',
            ERROR: 'error',
            WARNING: 'warning',
            SUCCESS: 'success',
            HELP: 'help',
            INFO: 'info'
          }
        },
        {
          label: 'Target',
          prop: 'target',
          type: 'text',
          value: '#demoButton'
        },
        {
          label: 'Closable',
          prop: 'closable',
          type: 'select',
          value: 'off',
          options: {
            OFF: 'off',
            ON: 'on'
          }
        },
        {
          label: 'Open',
          prop: 'open',
          value: true,
          type: 'checkbox'
        },
        {
          label: 'Interaction',
          prop: 'interaction',
          type: 'select',
          value: 'on',
          options: {
            OFF: 'off',
            ON: 'on'
          }
        }
      ],
      componentEvents: [
        'coral-overlay:beforeopen',
        'coral-overlay:open',
        'coral-overlay:beforeclose',
        'coral-overlay:close',
        'coral-overlay:positioned'
      ]
    }).insertAfterLastScript();
  }

